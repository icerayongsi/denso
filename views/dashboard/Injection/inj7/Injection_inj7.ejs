<%- include('../Injection_partials/Injection_header') -%>

  <%- include('../../../partials/navbar_dashboard') -%>

    <%- include('../Injection_partials/Injection_menu') -%>

      </div>
      </li>
      </ul>

      </div>
      </nav>

      <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 mt-3">

        <%- include('../Injection_partials/Injection_mechine_img') %>

          <div class="card card-body margin-5">

            <div
              class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-0 pb-2 mb-3 border-bottom">
              <h3 class="text-uppercase" style="font-weight: 700;">Injection <%= inj; %> / <%= page %> (Status)
              </h3>
            </div>

            <!-- MAIN CONTENT -->

            <div class="container-fluid">
              <div class="row">
                <h4>Shot data Chart</h4>
                <div class="d-flex bd-highlight mb-3">
                  <div class="p-2 bd-highlight">

                    <form method="GET" id="q-c-normal-data">
                      <select class="form-select" id="normal-chart-select">
                        <option>Cycle Time(s)</option>
                        <option>Inj. Time(s)</option>
                        <option>Recovery Time(s)</option>
                        <option>Inj.start Pos(mm)</option>
                        <option>H.P Trans Pos(mm)</option>
                        <option>Hold Comp Pos(mm)</option>
                        <option selected>Cushion(mm)</option>
                        <option>Inj. Press(Mpa)</option>
                        <option>H.P Trans Prs(Mpa)</option>
                        <option>Back Press(Mpa)</option>
                        <option>Cav. Press(OP)(Mpa)</option>
                        <option>LNH Temp(°C)</option>
                        <option>NH Temp(°C)</option>
                        <option>H4 Temp(°C)</option>
                        <option>H3 Temp(°C)</option>
                        <option>H2 Temp(°C)</option>
                        <option>H1 Temp(°C)</option>
                        <option>Throat Temp(°C)</option>
                        <option>Hyd. Temp(°C)</option>
                        <option>Mold Temp(Mov)(°C)</option>
                        <option>Mold Temp(Fix)(°C)</option>
                        <option>Panel Temp(°C)</option>
                        <option>HV Temp(OP)(°C)</option>
                      </select>
                    </form>

                  </div>

                  <div class="p-2 bd-highlight">
                    <div id="spinner-div">
                      <div class="spinner-border text-primary" role="status"></div>
                    </div>
                  </div>

                  <div class="ms-auto p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: rgba(255, 0, 0, 0.1);">
                          <p class="m-0 pt-1 text-center" style="color: rgb(255, 0, 0);">Max Value</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="c-normal-max-value">12</p>
                          </div>
                        </div>


                      </div>
                    </div>

                  </div>

                  <div class="flex-shrink-1 p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: rgba(238, 255, 0, 0.1);">
                          <p class="m-0 pt-1 text-center" style="color:rgb(238, 255, 0) ;">Warning Value</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="c-normal-warning-value">10</p>
                          </div>
                        </div>


                      </div>
                    </div>

                  </div>

                  <div class="flex-shrink-1 p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: var(--bs-tertiary-bg);">
                          <p class="m-0 pt-1 text-center">Last Value</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="c-normal-last-value"></p>
                          </div>
                        </div>


                      </div>
                    </div>

                  </div>

                </div>


                <div style="position: relative; height:20vh;">
                  <canvas class="my-1 w-100" id="normal-chart"></canvas>
                </div>

                <h4 class="mt-3 mb-2">Xbar Chart</h4>

                <div class="d-flex bd-highlight mb-2">
                  <div class="p-2 bd-highlight">

                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal"
                      data-bs-target="#staticBackdrop">
                      Datetime picker
                    </button>


                    <!-- Modal -->
                    <form method="GET" id="xbar-q-data">
                      <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
                        tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                          <div class="modal-content">
                            <div class="modal-header">
                              <h1 class="modal-title fs-5" id="staticBackdropLabel">Datetime picker</h1>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                            </div>
                            <div class="modal-body">

                              <div class="card-body">

                                <div class="mb-3">
                                  <label for="disabledTextInput" class="form-label">From : </label>

                                  <div class="input-group date" id="from">
                                    <input type="text" name="fromdate" class="form-control"
                                      data-date-format="YYYY-MM-DD HH:mm:ss" required />
                                    <span class="input-group-text" id="basic-addon2">
                                      <i class="bi bi-calendar"></i>
                                    </span>

                                  </div>

                                </div>

                                <div class="mb-3">
                                  <label for="disabledTextInput" class="form-label">To : </label>

                                  <div class="input-group date" id="to">
                                    <input type="text" name="todate" class="form-control"
                                      data-date-format="YYYY-MM-DD HH:mm:ss" required />
                                    <span class="input-group-text" id="basic-addon2">
                                      <i class="bi bi-calendar"></i>
                                    </span>

                                  </div>

                                </div>

                              </div>

                            </div>
                            <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                              <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Update</button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </form>

                  </div>
                  <div class="p-2 bd-highlight">

                    <select class="form-select" id="xbar-chart-select">
                      <option>Cycle Time(s)</option>
                      <option>Inj. Time(s)</option>
                      <option>Recovery Time(s)</option>
                      <option>Inj.start Pos(mm)</option>
                      <option>H.P Trans Pos(mm)</option>
                      <option>Hold Comp Pos(mm)</option>
                      <option selected>Cushion(mm)</option>
                      <option>Inj. Press(Mpa)</option>
                      <option>H.P Trans Prs(Mpa)</option>
                      <option>Back Press(Mpa)</option>
                      <option>Cav. Press(OP)(Mpa)</option>
                      <option>LNH Temp(°C)</option>
                      <option>NH Temp(°C)</option>
                      <option>H4 Temp(°C)</option>
                      <option>H3 Temp(°C)</option>
                      <option>H2 Temp(°C)</option>
                      <option>H1 Temp(°C)</option>
                      <option>Throat Temp(°C)</option>
                      <option>Hyd. Temp(°C)</option>
                      <option>Mold Temp(Mov)(°C)</option>
                      <option>Mold Temp(Fix)(°C)</option>
                      <option>Panel Temp(°C)</option>
                      <option>HV Temp(OP)(°C)</option>
                    </select>

                  </div>

                  <div class="p-2 bd-highlight">
                    <p class="text-center pt-2">Group size</p>
                  </div>

                  <div class="p-2 bd-highlight">

                    <select class="form-select" id="xbar-chart-select-group">
                      <option selected>2</option>
                      <option>3</option>
                      <option>4</option>
                      <option>5</option>
                      <option>6</option>
                    </select>

                  </div>

                  <div class="ms-auto p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: rgba(255, 0, 0, 0.1);">
                          <p class="m-0 pt-1 text-center" style="color: rgb(255, 0, 0);">UCL</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="UCL"></p>
                          </div>
                        </div>


                      </div>
                    </div>

                  </div>

                  <div class="flex-shrink-1 p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: rgba(255, 0, 0, 0.1);">
                          <p class="m-0 pt-1 text-center" style="color: rgb(255, 0, 0);">LCL</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="LCL"></p>
                          </div>
                        </div>

                      </div>
                    </div>

                  </div>

                  <div class="flex-shrink-1 p-2 bd-highlight" style="width: 22%;">

                    <div class="card mb-4">
                      <div class="row g-0">
                        <div class="col-md-4 p-2" style="background-color: rgba(152, 214, 89, 0.1);">
                          <p class="m-0 pt-1 text-center" style="color:rgba(152, 214, 89, 1);">CL</p>

                        </div>
                        <div class="col-md-8">
                          <div class="card-body p-2">
                            <p class="m-0 fs-5 text-center" id="CL"></p>
                          </div>
                        </div>

                      </div>
                    </div>

                  </div>

                  <div class="flex-shrink-1 p-2 bd-highlight">


                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-dark btn-grey" data-bs-toggle="modal"
                      data-bs-target="#xbar-setting">
                      <i class="bi bi-gear"></i>
                    </button>


                    <!-- Modal -->
                    <form method="GET" id="xbar-q-setting">
                      <div class="modal fade" id="xbar-setting" data-bs-backdrop="static" data-bs-keyboard="false"
                        tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                          <div class="modal-content">
                            <div class="modal-header">
                              <h1 class="modal-title fs-5" id="staticBackdropLabel">Xbar-R setting</h1>
                              <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                            </div>
                            <div class="modal-body">

                              <div class="card-body">

                                <div class="mb-3">
                                  <label for="disabledTextInput" class="form-label">UCL : </label>

                                  <input type="text" name="UCL" class="form-control" required />

                                </div>

                                <div class="mb-3">
                                  <label for="disabledTextInput" class="form-label">LCL : </label>

                                  <input type="text" name="LCL" class="form-control" required />

                                </div>

                                <div class="mb-3">
                                  <label for="disabledTextInput" class="form-label">CL : </label>

                                  <input type="text" name="CL" class="form-control" required />

                                </div>

                              </div>

                            </div>
                            <div class="modal-footer">
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                              <button class="btn btn-primary" type="submit" data-bs-dismiss="modal">Update</button>
                            </div>
                          </div>
                        </div>
                      </div>
                    </form>


                  </div>

                </div>

                <div style="position: relative; height:20vh;">
                  <canvas class="my-1 w-100" id="xbar-chart"></canvas>
                </div>

              </div>
            </div>

            <!-- END MAIN -->


      </main>

      <script>
        const socket = io('https://ws.ap.ngrok.io', { transports: ['websocket'] });

        let socket_ = new WebSocket("wss://node-red.ap.ngrok.io/ws/inj/" + "<%= name %>" + "/net100_data");

        socket_.onmessage = (event) => {
          let data_ = JSON.parse(event.data);
          data_.forEach((element) => {
            if (element.Name == "MC07") {
              $("#MC-T").html(element["Cycle Time(s)"]);
            }

          });
        }

        socket.on('inj-<%= name %>', (res) => {
          let alram = ['Stop', 'Down', 'Offline'];
          if (alram.includes(res.data.STATUS_NAME)) {
            // $("#stop").css('fill', '#FF0000');
            // $("#status-text").css('color', '#FF0000');
            // $("#status-text").html(res.data.STATUS_NAME);
            // $("#status-text-background").css('background-color', 'rgba(255,0,0,0.1)');
            // $("#arrange").css('fill', '#808080');
            // $("#production").css('fill', '#808080');

            $("#status-text").css('color', '#98D659');
            $("#status-text").html("Production");
            $("#status-text-background").css('background-color', 'rgba(152,214,89,0.1)');
            $("#stop").css('fill', '#808080');
            $("#arrange").css('fill', '#808080');
            $("#production").css('fill', '#98D659');

          } else if (res.data.STATUS_NAME == "Arrange") {
            $("#status-text").css('color', '#EEFF00');
            $("#status-text").html(res.data.STATUS_NAME);
            $("#status-text-background").css('background-color', 'rgba(238,255,0,0.1)');
            $("#stop").css('fill', '#808080');
            $("#arrange").css('fill', '#EEFF00');
            $("#production").css('fill', '#808080');
          } else if (res.data.STATUS_NAME == "Production") {
            $("#status-text").css('color', '#98D659');
            $("#status-text").html(res.data.STATUS_NAME);
            $("#status-text-background").css('background-color', 'rgba(152,214,89,0.1)');
            $("#stop").css('fill', '#808080');
            $("#arrange").css('fill', '#808080');
            $("#production").css('fill', '#98D659');
          }
          $(".mc_name").html(res.data.Name);
          $(".mc_status").html(res.data.STATUS_NAME);
          let date = new Date(res.data.STATUS_TIMESTAMP).toLocaleDateString('en-US');
          let time = new Date(res.data.STATUS_TIMESTAMP).toLocaleTimeString('th-Th');
          $(".mc_time").html(date + ' ' + time);
        });
      </script>

      <script>

        label_day = ['8/13/2022', '8/14/2022', '8/15/2022', '8/16/2022', '8/17/2022', '8/18/2022', '8/19/2022', '8/20/2022', '8/21/2022', '8/22/2022', '8/23/2022', '8/24/2022', '8/25/2022', '8/26/2022', '8/27/2022', '8/28/2022', '8/29/2022', '8/30/2022', '8/31/2022', '9/1/2022', '9/2/2022', '9/3/2022', '9/4/2022', '9/5/2022', '9/6/2022', '9/7/2022', '9/8/2022', '9/9/2022', '9/10/2022', '9/11/2022']

        const ctx = document.getElementById('normal-chart');
        const ctx2 = document.getElementById('xbar-chart');

        const chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: [],
            datasets: [{
              label: '',
              data: [],
              lineTension: 0,
              backgroundColor: 'transparent',
              borderColor: '#177D94',
              borderWidth: 1,
              pointBackgroundColor: '#177D94'
            }
            ]
          },
          options: {
            elements: {
              point: {
                borderWidth: 0,
                radius: 1,
                backgroundColor: 'rgba(0,0,0,0)'
              }
            },
            legend: {
              display: true,
              labels: {
                color: '#adb5bd',
              }
            },
            scales: {
              y: {
                ticks: {
                  color: '#ADB5BD',
                  beginAtZero: false
                }
              },
              x: {
                ticks: {
                  color: '#ADB5BD',
                  beginAtZero: false
                },
                min: 0,
                max: 30,
              },

            },

            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                labels: {
                  usePointStyle: true,
                  pointStyle: 'line',
                  color: '#adb5bd'
                }
              },
              annotation: {
                annotations: [
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(255, 65, 65)',
                    label: {
                      enabled: true,
                      content: 'Alarm',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 15,
                    borderColor: 'rgb(255, 65, 65)',
                    label: {
                      enabled: true,
                      content: 'Alarm',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 6,
                    borderColor: 'rgb(255, 192, 65)',
                    label: {
                      enabled: true,
                      content: 'Warning',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 6,
                    borderColor: 'rgb(255, 192, 65)',
                    label: {
                      enabled: true,
                      content: 'Warning',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  }
                ]
              }
            }
          }
        });

        const chart2 = new Chart(ctx2, {
          type: 'line',
          data: {
            labels: [],
            datasets: [{
              label: 'x̄',
              data: [],
              lineTension: 0,
              backgroundColor: 'transparent',
              borderColor: '#177D94',
              borderWidth: 1,
              pointBackgroundColor: '#177D94'
            }
            ]
          },
          options: {
            elements: {
              point: {
                borderWidth: 0,
                radius: 1,
                backgroundColor: 'rgba(0,0,0,0)'
              }
            },
            legend: {
              display: true,
              labels: {
                color: '#adb5bd',
              }
            },
            scales: {
              y: {
                ticks: {
                  color: '#ADB5BD',
                  beginAtZero: false
                }
              },
              x: {
                ticks: {
                  color: '#ADB5BD',
                  beginAtZero: false
                },
                //min: 0,
                //max: 30,
              },

            },

            responsive: true,
            maintainAspectRatio: false,
            plugins: {
              legend: {
                labels: {
                  usePointStyle: true,
                  pointStyle: 'line',
                  color: '#adb5bd'
                }
              },
              annotation: {
                annotations: [
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(255, 65, 65)',
                    label: {
                      enabled: true,
                      content: 'UCL',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(255, 65, 65)',
                    label: {
                      enabled: true,
                      content: 'LCL',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(152, 214, 89)',
                    label: {
                      enabled: true,
                      content: 'CL',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(255, 192, 65)',
                    label: {
                      enabled: true,
                      content: '',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  },
                  {
                    type: 'line',
                    scaleID: 'y',
                    value: 0,
                    borderColor: 'rgb(255, 192, 65)',
                    label: {
                      enabled: true,
                      content: '',
                      borderWidth: 1,
                      borderColor: 'transparent',
                      position: 'end',
                    }
                  }
                ]
              }
            }
          }
        });
      </script>

      <script>

        let chart_normal_max_data, chart_normal_warning_data, chart_normal_last_data;
        let chart_normal_data = [], chart_normal_label = [];

        chart.options.plugins.annotation.annotations[0].value = 1;
        chart.options.plugins.annotation.annotations[1].display = false;
        chart.options.plugins.annotation.annotations[2].value = 3;
        chart.options.plugins.annotation.annotations[3].display = false;

        $(document).ready(() => {
          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/normal-chart",
            type: "GET",
            data: {
              "col": $("#normal-chart-select option:selected").html()
            },
            success: (data) => {
              data.forEach((element) => {

                chart_normal_data.push(element[$("#normal-chart-select option:selected").html()]);
                chart_normal_label.push(new Date(element["DateTime"]).toLocaleString('th-TH').slice(11, 19));
              });

              $("#c-normal-max-value").html("1");
              $("#c-normal-warning-value").html("3");
              $("#c-normal-last-value").html(chart_normal_data[0]);

              if (data[0]["Cushion(mm)"] != null) {
                chart.options.plugins.annotation.annotations[0].value = 11;
                chart.options.plugins.annotation.annotations[1].display = true;
                chart.options.plugins.annotation.annotations[1].value = 1;

                chart.options.plugins.annotation.annotations[2].value = 10;
                chart.options.plugins.annotation.annotations[3].display = true;
                chart.options.plugins.annotation.annotations[3].value = 2;
              } else {
                chart.options.plugins.annotation.annotations[0].value = 1;
                chart.options.plugins.annotation.annotations[1].display = false;
                chart.options.plugins.annotation.annotations[2].value = 3;
                chart.options.plugins.annotation.annotations[3].display = false;
              }

              chart.data.datasets[0].data = chart_normal_data.reverse();
              chart.data.datasets[0].label = $("#normal-chart-select option:selected").html() + "  (Last 30 data)";
              chart.data.labels = chart_normal_label.reverse();

              chart.update()
            }
          });

          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/xbar-chart",
            type: "GET",
            data: {
              "col": $("#xbar-chart-select option:selected").html(),
              "from": $('input[name="fromdate"]').val(),
              "to": $('input[name="todate"]').val()
            },
            success: (data) => {
              let sum = 0, group = $("#xbar-chart-select-group option:selected").html();
              chart_xbar_data = [], chart_xbar_label = [];
              data.forEach((element, i) => {
                sum += element[$("#xbar-chart-select option:selected").html()];
                if (i % group == 0) {
                  chart_xbar_data.push((sum / group).toFixed(2));
                  chart_xbar_label.push(new Date(element["DateTime"]).toLocaleString('th-TH').slice(11, 19));
                  sum = 0;
                }
              });

              chart2.options.plugins.annotation.annotations[0].value = $('input[name="UCL"]').val();
              chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
              chart2.options.plugins.annotation.annotations[2].value = $('input[name="CL"]').val();
              chart2.options.plugins.annotation.annotations[3].value = 10;
              chart2.options.plugins.annotation.annotations[4].value = 3;

              chart2.data.datasets[0].data = chart_xbar_data.reverse();
              chart2.data.datasets[0].label = "x̄ of " + $("#xbar-chart-select option:selected").html();
              chart2.data.labels = chart_xbar_label.reverse();

              chart2.update();
            }
          });

          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/get-xbar-settings",
            type: "GET",
            success: (data) => {
              $('input[name="UCL"]').val(data.UCL);
              $('input[name="LCL"]').val(data.LCL);
              $('input[name="CL"]').val(data.CL);
              $("#UCL").html(data.UCL);
              $("#LCL").html(data.LCL);
              $("#CL").html(data.CL);
            }
          });

        });


        $("#normal-chart-select").change((e) => {
          e.preventDefault();
          $('#spinner-div').show();
          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/normal-chart",
            type: "GET",
            data: {
              "col": $("#normal-chart-select option:selected").html()
            },
            success: (data) => {
              chart_normal_data = [], chart_normal_label = [];
              data.forEach((element) => {
                chart_normal_data.push(element[$("#normal-chart-select option:selected").html()]);
                chart_normal_label.push(new Date(element["DateTime"]).toLocaleString('th-TH').slice(11, 19));
              });

              $("#c-normal-max-value").html("0");
              $("#c-normal-warning-value").html("0");
              $("#c-normal-last-value").html(chart_normal_data[0]);

              if (data[0]["Recovery Time(s)"] != null) {
                chart.options.plugins.annotation.annotations[0].value = 18;
                chart.options.plugins.annotation.annotations[1].display = true;
                chart.options.plugins.annotation.annotations[1].value = 1;

                chart.options.plugins.annotation.annotations[2].value = 16;
                chart.options.plugins.annotation.annotations[3].display = true;
                chart.options.plugins.annotation.annotations[3].value = 3;
              } else if (data[0]["Cushion(mm)"] != null) {
                chart.options.plugins.annotation.annotations[0].value = 11;
                chart.options.plugins.annotation.annotations[1].display = true;
                chart.options.plugins.annotation.annotations[1].value = 1;

                chart.options.plugins.annotation.annotations[2].value = 10;
                chart.options.plugins.annotation.annotations[3].display = true;
                chart.options.plugins.annotation.annotations[3].value = 2;
              } else {
                chart.options.plugins.annotation.annotations[0].value = 1;
                chart.options.plugins.annotation.annotations[1].display = false;
                chart.options.plugins.annotation.annotations[2].value = 3;
                chart.options.plugins.annotation.annotations[3].display = false;
              }

              chart.data.datasets[0].data = chart_normal_data.reverse();
              chart.data.datasets[0].label = $("#normal-chart-select option:selected").html() + "  (Last 30 data)";
              chart.data.labels = chart_normal_label.reverse();

              chart.update();
            },
            complete: function () {
              $('#spinner-div').hide();
            }
          });
        });

        let current_date = new Date().toLocaleString('fr-CA').slice(0, 11);
        let current_time = new Date().toLocaleString('th-TH').slice(11, 19);
        let current_time_back_1hour = new Date(Date.now() - 3600000 * 1).toLocaleString('th-TH').slice(11, 19);

        let chart_xbar_data = [], chart_xbar_label = [];

        $('input[name="fromdate"]').val(current_date + current_time_back_1hour);
        $('input[name="todate"]').val(current_date + current_time);

        $("#xbar-chart-select,#xbar-chart-select-group").change((e) => {
          e.preventDefault();
          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/xbar-chart",
            type: "GET",
            data: {
              "col": $("#xbar-chart-select option:selected").html(),
              "from": $('input[name="fromdate"]').val(),
              "to": $('input[name="todate"]').val()
            },
            success: (data) => {
              let sum = 0, group = $("#xbar-chart-select-group option:selected").html();
              chart_xbar_data = [], chart_xbar_label = [];
              console.log(data);
              data.forEach((element, i) => {
                sum += element[$("#xbar-chart-select option:selected").html()];
                if (i % group == 0) {
                  chart_xbar_data.push((sum / group).toFixed(2));
                  chart_xbar_label.push(new Date(element["DateTime"]).toLocaleString('th-TH').slice(11, 19));
                  sum = 0;
                }
              });



              if (data[0]["Recovery Time(s)"] != null) {

                chart2.options.plugins.annotation.annotations[0].value = (parseInt($('input[name="UCL"]').val()) + 7).toString();
                chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
                chart2.options.plugins.annotation.annotations[3].value = 16;
                chart2.options.plugins.annotation.annotations[4].value = 3;
              } else {
                chart2.options.plugins.annotation.annotations[0].value = $('input[name="UCL"]').val();
                chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
                chart2.options.plugins.annotation.annotations[2].value = $('input[name="CL"]').val();
                chart2.options.plugins.annotation.annotations[3].value = 10;
                chart2.options.plugins.annotation.annotations[4].value = 2;
              }
              chart2.data.datasets[0].data = chart_xbar_data.reverse();
              chart2.data.datasets[0].label = "x̄ of " + $("#xbar-chart-select option:selected").html();
              chart2.data.labels = chart_xbar_label.reverse();



              chart2.update();
            }
          });
        });

        $("#xbar-q-data").submit((e) => {
          e.preventDefault();
          $('#spinner-div').show();
          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/xbar-chart",
            type: "GET",
            data: {
              "col": $("#xbar-chart-select option:selected").html(),
              "from": $('input[name="fromdate"]').val(),
              "to": $('input[name="todate"]').val()
            },
            success: (data) => {
              let sum = 0, group = $("#xbar-chart-select-group option:selected").html();
              chart_xbar_data = [], chart_xbar_label = [];

              data.forEach((element, i) => {
                sum += element[$("#xbar-chart-select option:selected").html()];
                if (i % group == 0) {
                  chart_xbar_data.push((sum / group).toFixed(2));
                  chart_xbar_label.push(new Date(element["DateTime"]).toLocaleString('th-TH').slice(11, 19));
                  sum = 0;
                }
              });

              if (data[0]["Recovery Time(s)"] != null) {
                chart2.options.plugins.annotation.annotations[0].value = (parseInt($('input[name="UCL"]').val()) + 7).toString();
                chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
                chart2.options.plugins.annotation.annotations[3].value = 16;
                chart2.options.plugins.annotation.annotations[4].value = 3;
              } else {
                chart2.options.plugins.annotation.annotations[0].value = $('input[name="UCL"]').val();
                chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
                chart2.options.plugins.annotation.annotations[2].value = $('input[name="CL"]').val();
                chart2.options.plugins.annotation.annotations[3].value = 10;
                chart2.options.plugins.annotation.annotations[4].value = 2;
              }
              chart2.data.datasets[0].data = chart_xbar_data.reverse();
              chart2.data.datasets[0].label = "x̄ of " + $("#xbar-chart-select option:selected").html();
              chart2.data.labels = chart_xbar_label.reverse();



              chart2.update();

            },
            complete: function () {
              $('#spinner-div').hide();
            }
          });
        });


        $("#xbar-q-setting").submit((e) => {
          e.preventDefault();
          $.ajax({
            url: "https://node-red.ap.ngrok.io/inj/7/xbar-settings",
            type: "GET",
            data: {
              'UCL': $('input[name="UCL"]').val(),
              'LCL': $('input[name="LCL"]').val(),
              'CL': $('input[name="CL"]').val(),
            },
            success: (data) => {
              console.log(data);

              $('input[name="UCL"]').val(data.UCL);
              $('input[name="LCL"]').val(data.LCL);
              $('input[name="CL"]').val(data.CL);
              $("#UCL").html(data.UCL);
              $("#LCL").html(data.LCL);
              $("#CL").html(data.CL);

              chart2.options.plugins.annotation.annotations[0].value = $('input[name="UCL"]').val();
              chart2.options.plugins.annotation.annotations[1].value = $('input[name="LCL"]').val();
              chart2.options.plugins.annotation.annotations[2].value = $('input[name="CL"]').val();

              chart2.update();

            }
          });
        });



      </script>